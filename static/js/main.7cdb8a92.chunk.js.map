{"version":3,"sources":["assets/svg/play.svg","assets/svg/pause.svg","layout/Game/GameControls.js","utils/numbers.js","hooks/useGridData.js","utils/generations.js","layout/Game/index.js","hooks/useWindowSize.js","components/Svg/Svg.js","components/Grid/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","className","d","fill","_ref3","cx","cy","r","stroke","_ref4","fillRule","clipRule","SvgPlay","_ref","svgRef","title","titleId","props","viewBox","xmlns","ref","id","ForwardRef","strokeWidth","strokeLinecap","strokeLinejoin","y2","x2","y1","x1","_ref5","SvgPause","GameControls","onClick","isRunning","prevDividend","number","divider","Math","trunc","useGridData","size","squareSize","useState","cells","setCells","colsNumber","useMemo","ceil","width","rowsNumber","height","findNeighbors","useCallback","cell","neighbours","c","push","filter","neighbour","alive","useEffect","rows","columns","d3","map","col","row","random","x","y","cellsGenerate","runGeneration","updateCellState","GameLayout","children","windowSize","margin","setWindowSize","getDimensionSize","dimension","getSize","window","screen","handleResize","addEventListener","removeEventListener","useWindowSize","console","log","running","setRunning","timerId","useRef","current","setInterval","clearInterval","s","Svg","style","border","Grid","data","selectAll","attr","enter","append","exit","remove","App","Game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cdb8a92.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"inner-circle\",\n  d: \"M65 21C40.1488 21 20 41.1488 20 66C20 90.8512 40.1488 111 65 111C89.8512 111 110 90.8512 110 66C110 41.1488 89.8512 21 65 21Z\",\n  fill: \"white\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"circle\", {\n  className: \"outer_circle\",\n  cx: 65.5,\n  cy: 65.5,\n  r: 64,\n  stroke: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"play\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M60 76V57L77 66.7774L60 76Z\",\n  fill: \"#BF2428\"\n});\n\nfunction SvgPlay(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"play-button\",\n    viewBox: \"0 0 131 131\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlay);\nexport default __webpack_public_path__ + \"static/media/play.6553eab3.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"inner-circle\",\n  d: \"M65 21C40.1488 21 20 41.1488 20 66C20 90.8512 40.1488 111 65 111C89.8512 111 110 90.8512 110 66C110 41.1488 89.8512 21 65 21Z\",\n  fill: \"white\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"circle\", {\n  className: \"outer_circle\",\n  cx: 65.5,\n  cy: 65.5,\n  r: 64,\n  stroke: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"line\", {\n  className: \"pause\",\n  stroke: \"#BF2428\",\n  strokeWidth: 10,\n  strokeLinecap: \"undefined\",\n  strokeLinejoin: \"undefined\",\n  id: \"svg_6\",\n  y2: 80.68018,\n  x2: 73.51527,\n  y1: 50.31982,\n  x1: 73.56992,\n  fill: \"none\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"line\", {\n  className: \"pause\",\n  stroke: \"#BF2428\",\n  strokeWidth: 10,\n  strokeLinecap: \"undefined\",\n  strokeLinejoin: \"undefined\",\n  id: \"svg_5\",\n  y2: 80.68018,\n  x2: 57.43008,\n  y1: 50.31982,\n  x1: 57.48473,\n  fill: \"none\"\n});\n\nfunction SvgPause(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"pause-button\",\n    viewBox: \"0 0 131 131\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPause);\nexport default __webpack_public_path__ + \"static/media/pause.6e1a48e5.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as PlayIcon } from \"../../assets/svg/play.svg\";\nimport { ReactComponent as PauseIcon } from \"../../assets/svg/pause.svg\";\n\nconst GameControls = ({ onClick, isRunning }) => {\n  return (\n    <div className=\"controls\">\n      {isRunning ? (\n        <PauseIcon onClick={onClick} />\n      ) : (\n        <PlayIcon onClick={onClick} />\n      )}\n    </div>\n  );\n};\n\nexport default GameControls;\n","export const prevDividend = (number, divider) => {\n  const quotient = Math.trunc(number / divider);\n\n  const dividend = divider * quotient;\n\n  return dividend;\n};\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { cellsGenerate } from \"../utils\";\n\nexport const useGridData = ({ size, squareSize }) => {\n  const [cells, setCells] = useState();\n\n  const colsNumber = useMemo(\n    () => Math.ceil(size.width / squareSize),\n    [size.width, squareSize]\n  );\n  const rowsNumber = useMemo(\n    () => Math.ceil(size.height / squareSize),\n    [size.height, squareSize]\n  );\n\n  const findNeighbors = useCallback(\n    (cell) => {\n      let neighbours = [];\n\n      const { r, c } = cell;\n      neighbours.push(cells[(r - 1) * colsNumber + (c - 1)]);\n      neighbours.push(cells[r * colsNumber + (c - 1)]);\n      neighbours.push(cells[(r + 1) * colsNumber + (c - 1)]);\n      neighbours.push(cells[(r - 1) * colsNumber + c]);\n      neighbours.push(cells[(r + 1) * colsNumber + c]);\n      neighbours.push(cells[(r - 1) * colsNumber + (c + 1)]);\n      neighbours.push(cells[r * colsNumber + (c + 1)]);\n      neighbours.push(cells[(r + 1) * colsNumber + (c + 1)]);\n\n      return neighbours.filter(\n        (neighbour) => neighbour && neighbour.alive === true\n      );\n    },\n    [cells, colsNumber]\n  );\n\n  const updateCellState = (cell) => {\n    const neighbours = findNeighbors(cell);\n\n    return {\n      ...cell,\n      alive:\n        (cell.alive && neighbours.length >= 2 && neighbours.length <= 3) ||\n        (!cell.alive && neighbours.length === 3),\n    };\n  };\n\n  const runGeneration = () => {\n    setCells((c) => c.map((cell) => updateCellState(cell)));\n  };\n\n  useEffect(() => {\n    if (colsNumber && rowsNumber) {\n      setCells(cellsGenerate(rowsNumber, colsNumber, squareSize));\n    }\n  }, [colsNumber, rowsNumber, squareSize]);\n\n  return {\n    cells,\n\n    runGeneration,\n  };\n};\n","import * as d3 from \"d3\";\n\nexport const cellsGenerate = (rows, columns, squareSize) => {\n  const cells = d3.range(0, rows * columns).map((d) => {\n    const col = d % columns;\n    const row = (d - col) / columns;\n    const alive = Math.random() > 0.5;\n    return {\n      r: row,\n      c: col,\n      x: col * squareSize,\n      y: row * squareSize,\n      alive,\n    };\n  });\n\n  return cells;\n};\n","import { useEffect, useMemo, useRef, useState } from \"react\";\n\nimport GameControls from \"./GameControls\";\nimport { useGridData, useWindowSize } from \"../../hooks\";\nimport { prevDividend } from \"../../utils\";\n\nconst GameLayout = ({ children }) => {\n  const windowSize = useWindowSize({ margin: 15 });\n\n  const squareSize = 10;\n  const width = useMemo(\n    () => prevDividend(windowSize.width, squareSize),\n    [windowSize.width]\n  );\n  const height = useMemo(\n    () => prevDividend(windowSize.height, squareSize),\n    [windowSize.height]\n  );\n\n  const { cells, runGeneration } = useGridData({\n    size: { width, height },\n    squareSize,\n  });\n\n  console.log(\"[GAME_LAYOUT] -> render\");\n\n  const [running, setRunning] = useState(false);\n  const timerId = useRef(0);\n  const runTime = 50;\n\n  const toggleGeneration = () => setRunning((s) => !s);\n\n  useEffect(() => {\n    if (running) {\n      timerId.current = setInterval(runGeneration, runTime);\n    } else {\n      clearInterval(timerId.current);\n    }\n\n    return () => clearInterval(timerId.current);\n  }, [running, runGeneration]);\n\n  return (\n    <>\n      <GameControls isRunning={running} onClick={toggleGeneration} />\n      {children(width, height, cells, squareSize)}\n    </>\n  );\n};\n\nexport default GameLayout;\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport const useWindowSize = ({ margin = 0 }) => {\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  const getDimensionSize = (dimension, margin) =>\n    dimension - (dimension * margin) / 100;\n\n  const getSize = useCallback(() => {\n    const {\n      screen: { height, width },\n    } = window;\n\n    return {\n      width: getDimensionSize(width, margin),\n      height: getDimensionSize(height, margin),\n    };\n  }, [margin]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({ ...getSize() });\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [getSize]);\n\n  return windowSize;\n};\n","import { useRef } from \"react\";\n\nconst Svg = ({ width, height, children }) => {\n  const ref = useRef();\n\n  console.log(\"[SVG] -> render\");\n\n  return (\n    <svg\n      ref={ref}\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n      style={{ border: \"2px solid gold\" }}\n    >\n      {children(ref)}\n    </svg>\n  );\n};\n\nexport default Svg;\n","import { useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nimport \"./Grid.css\";\n\nconst Grid = ({ data, svgRef, squareSize }) => {\n  console.log(\"[Grid] -> render\");\n\n  useEffect(() => {\n    if (!data) return;\n\n    const board = d3.select(svgRef.current);\n    const cell = board.selectAll(\".cell\").data(data);\n\n    cell.attr(\"class\", function (d) {\n      return \"cell \" + (d.alive ? \"alive\" : \"dead\");\n    });\n\n    cell\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", function (d) {\n        return \"cell \" + (d.alive ? \"alive\" : \"dead\");\n      })\n      .attr(\"x\", (d) => d.x)\n      .attr(\"y\", (d) => d.y)\n      .attr(\"width\", squareSize)\n      .attr(\"height\", squareSize);\n\n    // .each(function (d) {\n    //   d3.select(this).on(\"mousedown\", function (d) {\n    //     // isMouseDown = true;\n    //     // click(d, d3.event.button === 0);\n    //     return false;\n    //   });\n    //   // .on(\"mouseover\", function (d) {\n    //   //   if (isMouseDown) click(d, d3.event.button === 0);\n    //   //   return false;\n    //   // })\n    //   // .on(\"mouseup\", function (d) {\n    //   //   isMouseDown = false;\n    //   //   d3.event.preventDefault();\n    //   //   d3.event.stopPropagation();\n    //   //   return false;\n    //   // });\n    // });\n\n    cell.exit().remove();\n  }, [data, squareSize, svgRef]);\n\n  return null;\n\n  // const msTimestep = 1000;\n\n  // const randomField = useCallback(() => {\n  //   console.log(\"[RANDOM FIELD]\");\n\n  //   return _.map(d3.range(cellSquare), function (i) {\n  //     return _.map(d3.range(cellSquare), function (j) {\n  //       return Math.random() < 0.5 ? 1 : 0;\n  //     });\n  //   });\n  // }, [cellSquare]);\n\n  // useEffect(() => {\n  //   let xScale = d3\n  //     .scaleLinear()\n  //     .domain([0, width / cellSquare])\n  //     .range([0, width]);\n  //   let yScale = d3\n  //     .scaleLinear()\n  //     .domain([0, height / cellSquare])\n  //     .range([0, height]);\n\n  //   let field;\n\n  //   const svgElement = d3\n  //     .select(svgRef.current)\n  //     .attr(\"height\", height)\n  //     .attr(\"width\", width)\n  //     .on(\"click\", function () {\n  //       field = randomField();\n  //     });\n\n  //   field = randomField();\n\n  //   const createNewGeneration = (states) => {\n  //     let nextGen = new Array();\n  //     const ccx = states.length;\n  //     for (let x = 0; x < ccx; x++) {\n  //       const ccy = states[x].length;\n  //       nextGen[x] = new Array();\n  //       for (let y = 0; y < ccy; y++) {\n  //         const ti = y - 1 < 0 ? ccy - 1 : y - 1; // top index\n  //         const ri = x + 1 === ccx ? 0 : x + 1; // right index\n  //         const bi = y + 1 === ccy ? 0 : y + 1; // bottom index\n  //         const li = x - 1 < 0 ? ccx - 1 : x - 1; // left index\n\n  //         const thisState = states[x][y];\n  //         let liveNeighbours = 0;\n  //         liveNeighbours += states[li][ti] ? 1 : 0;\n  //         liveNeighbours += states[x][ti] ? 1 : 0;\n  //         liveNeighbours += states[ri][ti] ? 1 : 0;\n  //         liveNeighbours += states[li][y] ? 1 : 0;\n  //         liveNeighbours += states[ri][y] ? 1 : 0;\n  //         liveNeighbours += states[li][bi] ? 1 : 0;\n  //         liveNeighbours += states[x][bi] ? 1 : 0;\n  //         liveNeighbours += states[ri][bi] ? 1 : 0;\n\n  //         let newState = false;\n\n  //         if (thisState) {\n  //           newState = liveNeighbours === 2 || liveNeighbours === 3 ? 1 : 0;\n  //         } else {\n  //           newState = liveNeighbours === 3 ? 1 : 0;\n  //         }\n\n  //         nextGen[x][y] = newState;\n  //       }\n  //     }\n\n  //     return nextGen;\n  //   };\n\n  //   const render = (data) => {\n  //     const up = svgElement.selectAll(\"g.row\").data(data);\n  //     const en = up.enter();\n\n  //     en.append(\"svg:g\").classed(\"row\", true);\n\n  //     const upSquare = up.selectAll(\"g.square\").data((d) => {\n  //       return d;\n  //     });\n  //     const enSquare = upSquare.enter();\n\n  //     enSquare\n  //       .append(\"g\")\n  //       .classed(\"square\", true)\n  //       .append(\"rect\")\n  //       .attr(\"x\", function (d, i, j) {\n  //         return xScale(i);\n  //       })\n  //       .attr(\"y\", function (d, i, j) {\n  //         return yScale(i);\n  //       })\n  //       .attr(\"width\", cellSquare)\n  //       .attr(\"height\", cellSquare);\n\n  //     // Finally, just switch class on and off to visualize binary state\n  //     upSquare.classed(\"on\", function (d) {\n  //       return d === 1;\n  //     });\n  //   };\n\n  //   render(field);\n\n  //   const iterate = () => {\n  //     field = createNewGeneration(field);\n  //     console.log(\"[TIMER CHEECK] -> field: \", field);\n\n  //     render(field);\n\n  //     // d3.timer(iterate, msTimestep);\n\n  //     return true;\n  //   };\n\n  //   // d3.timer(iterate, 0, 10000);\n  //   // d3.timer(iterate, 0, msTimestep);\n  // }, [cellSquare, svgRef, width, height, randomField]);\n\n  // return null;\n\n  // const Grid = ({ data, cellSquare }) => {\n  // const Grid = ({ data, cellSquare, svgRef }) => {\n  // const square = 20;\n\n  // const squaresRow = useMemo(() => Math.floor(width / square), []);\n  // const squaresColumn = useMemo(() => Math.floor(height / square), []);\n  // console.log(\"squaresRow: \", squaresRow);\n  // console.log(\"squaresColumn: \", squaresColumn);\n\n  // const getRandomColor = () => (Math.round(Math.random()) ? \"#FFF\" : \"#000\");\n\n  // useEffect(() => {\n  //   const svgElement = d3.select(svgRef.current);\n\n  //    data.map((rows) => {\n  //     // console.log(\"[DATA] -> rows: \", rows);\n  //      rows.map((column) => )\n  //   })\n\n  //   // Array.from({ length: squaresColumn }, (_, i) => ({\n  //   //   index: i,\n  //   //   fill: getRandomColor,\n  //   // })).map((squareItem, n) => {\n  //   //   const rows = svgElement\n  //   //     .selectAll(`rect .row-${n + 1}`)\n  //   //     .data(d3.range(squaresRow))\n  //   //     .enter()\n  //   //     .append(\"rect\")\n  //   //     .attr(\"class\", function (d, i) {\n  //   //       return `square row-${n + 1} col-${i + 1}`;\n  //   //     })\n  //   //     .attr(\"id\", function (d, i) {\n  //   //       return `square row-${n + 1} col-${i + 1}`;\n  //   //     })\n  //   //     .attr(\"width\", square)\n  //   //     .attr(\"height\", square)\n  //   //     .attr(\"x\", function (d, i) {\n  //   //       return i * square;\n  //   //     })\n  //   //     .attr(\"y\", function (d, i) {\n  //   //       return n * square;\n  //   //     })\n  //   //     .attr(\"fill\", squareItem.fill)\n  //   //     .attr(\"stroke\", \"#FDBB30\");\n\n  //   //   //  // test with some feedback\n  //   //   //  var test = rows.on('mouseover', function (d, i) {\n  //   //   //   d3.select('#grid-ref').text(function () {\n  //   //   //     return 'row: ' + (n + 1) + ' | ' + 'column: ' + (i + 1);\n  //   //   //   });\n  //   //   //   d3.selectAll('.square').attr('fill', 'white');\n  //   //   //   d3.select(this).attr('fill', '#7AC143');\n  //   //   // });\n\n  //   //   return rows;\n  //   // });\n  // }, []);\n  // }, [squaresColumn, squaresRow, svgRef]);\n\n  // useEffect(() => {\n  //   const svgElement = d3.select(svgRef.current);\n\n  //   data.forEach(\n  //     (row, rowIndex) => {\n  //       const rows = svgElement\n  //         .selectAll(`rect .row-${rowIndex + 1}`)\n  //         .data(row)\n  //         .enter()\n  //         .append(\"rect\")\n  //         .attr(\"class\", function (d, i) {\n  //           return `square row-${rowIndex + 1} col-${i + 1}`;\n  //         })\n  //         .attr(\"id\", function (d, i) {\n  //           return `square row-${rowIndex + 1} col-${i + 1}`;\n  //         })\n  //         .attr(\"width\", cellSquare)\n  //         .attr(\"height\", cellSquare)\n  //         .attr(\"x\", function (d, i) {\n  //           return i * cellSquare;\n  //         })\n  //         .attr(\"y\", function (d, i) {\n  //           return rowIndex * cellSquare;\n  //         })\n  //         .attr(\"fill\", (d) => (d ? \"#000\" : \"#FFF\"));\n  //     }\n  //     // rows.forEach((cell, cellIndex, cells) => {\n\n  //     // })\n  //   );\n\n  //   console.log(\"svgElement: \", svgElement);\n  // }, [svgRef, cellSquare, data]);\n\n  // return null;\n\n  // return (\n  //   <>\n  //     {data.map((rows, rowIndex) =>\n  //       rows.map((column, columnIndex) => (\n  //         <Rect\n  //           key={rowIndex + columnIndex}\n  //           width={cellSquare}\n  //           height={cellSquare}\n  //           x={columnIndex * cellSquare}\n  //           y={rowIndex * cellSquare}\n  //           fill={column ? \"#000\" : \"#FFF\"}\n  //           // stroke=\"#FDBB30\"\n  //         />\n  //       ))\n  //     )}\n  //   </>\n  // );\n  // return (\n  //    <section id=\"grid\">\n  //      <Svg width={width} height={height} /* data={d3.range(squaresRow)} */>\n  //        {(ref) => {\n  //         const svgElement = d3.select(ref.current);\n  //         return Array.from({ length: squaresColumn }, (_, i) => i + 1).map(\n  //           (n) => {\n  //             const rows = svgElement\n  //               .selectAll(\"rect\" + \" .row-\" + (n + 1))\n  //               .data(d3.range(squaresRow))\n  //               .enter()\n  //               .append(\"rect\")\n  //               .attr({\n  //                 // class: function (d, i) {\n  //                 //   return \"square row-\" + (n + 1) + \" \" + \"col-\" + (i + 1);\n  //                 // },\n  //                 // id: function (d, i) {\n  //                 //   return \"s-\" + (n + 1) + (i + 1);\n  //                 // },\n  //                 width: square,\n  //                 height: square,\n  //                 x: function (d, i) {\n  //                   return i * square;\n  //                 },\n  //                 y: n * square,\n  //                 fill: \"#fff\",\n  //                 stroke: \"#FDBB30\",\n  //               });\n\n  //             console.log(\"rows: \", rows);\n  //             console.log(\"svgElement: \", svgElement);\n  //             // svgElement\n  //             //   .selectAll(\"rect\")\n  //             //   .data(d3.range(squaresRow))\n  //             //   .join(\"rect\")\n  //             //   .attr(\"width\", 3)\n  //             //   .attr(\"height\", 3)\n  //             //   .attr(\"x\", (d) => d[0])\n  //             //   .attr(\"y\", (d) => d[1]);\n\n  //             // console.log(\"svgElement: \", svgElement);\n\n  //             return rows;\n  //           }\n  //         );\n  //        }}\n  //      </Svg>\n  //    </section>\n  // );\n};\n\nexport default Grid;\n","import GameLayout from \"./layout/Game\";\nimport Svg from \"./components/Svg/Svg\";\nimport Grid from \"./components/Grid/Grid\";\n\nimport \"./App.css\";\n\nfunction App() {\n  console.log(\"[APP] -> render\");\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <GameLayout>\n          {(width, height, cells, squareSize) => (\n            <Svg width={width} height={height}>\n              {(ref) => (\n                <Grid svgRef={ref} data={cells} squareSize={squareSize} />\n              )}\n            </Svg>\n          )}\n        </GameLayout>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}